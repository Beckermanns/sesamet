package com.aiep.sesamet.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class CentroMedicoAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCentroMedicoAllPropertiesEquals(CentroMedico expected, CentroMedico actual) {
        assertCentroMedicoAutoGeneratedPropertiesEquals(expected, actual);
        assertCentroMedicoAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCentroMedicoAllUpdatablePropertiesEquals(CentroMedico expected, CentroMedico actual) {
        assertCentroMedicoUpdatableFieldsEquals(expected, actual);
        assertCentroMedicoUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCentroMedicoAutoGeneratedPropertiesEquals(CentroMedico expected, CentroMedico actual) {
        assertThat(expected)
            .as("Verify CentroMedico auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCentroMedicoUpdatableFieldsEquals(CentroMedico expected, CentroMedico actual) {
        assertThat(expected)
            .as("Verify CentroMedico relevant properties")
            .satisfies(e -> assertThat(e.getCentro()).as("check centro").isEqualTo(actual.getCentro()))
            .satisfies(e -> assertThat(e.getRegion()).as("check region").isEqualTo(actual.getRegion()))
            .satisfies(e -> assertThat(e.getComuna()).as("check comuna").isEqualTo(actual.getComuna()))
            .satisfies(e -> assertThat(e.getDireccion()).as("check direccion").isEqualTo(actual.getDireccion()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertCentroMedicoUpdatableRelationshipsEquals(CentroMedico expected, CentroMedico actual) {
        // empty method
    }
}
